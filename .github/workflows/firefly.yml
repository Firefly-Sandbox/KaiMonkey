name: Firefly Terraform Run

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

on:
  push:
    branches:
      - main
    paths:
      - /**
  pull_request:
    branches:
      - main
    paths:
      - /**
  workflow_dispatch:
    inputs:
      apply:
        description: Should apply Terraform changes?
        type: boolean
        default: false

jobs:
  deploy:
    name: Deploy Terraform Workspace
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/aws
    env:
      FIREFLY_ACCESS_KEY: ${{ secrets.FIREFLY_ACCESS_KEY }}
      FIREFLY_SECRET_KEY: ${{ secrets.FIREFLY_SECRET_KEY }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set deployment parameters
        id: set-params
        run: |-
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "::set-output name=apply::${{ github.event.inputs.apply }}"
          elif [ "${{ github.event_name }}" = "push" ] && [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "::set-output name=apply::true"
          else
            echo "::set-output name=apply::false"
          fi
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.3"
          terraform_wrapper: false
      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/aws
      - name: Terraform Plan
        id: terraform-plan
        run: terraform plan -json -out=tf.plan > plan_log.jsonl || terraform show -json tf.plan > plan.json
        continue-on-error: true
        working-directory: ./terraform/aws
      - name: Firefly Post Plan
        run: |-
          curl -O https://gofirefly-prod-iac-ci-cli-binaries.s3.amazonaws.com/fireflyci/latest/fireflyci_Linux_x86_64.tar.gz
          tar -xf fireflyci_Linux_x86_64.tar.gz
          chmod a+x fireflyci
          ./fireflyci post-plan -l plan_log.jsonl -f plan.json --workspace KaiMonkey
          working-directory: ./terraform/aws
      - name: Terraform Apply
        if: steps.set-params.outputs.apply == 'true' && steps.terraform-plan.outcome == 'success'
        run: terraform apply -auto-approve -json > apply_log.jsonl
        continue-on-error: true
        working-directory: ./terraform/aws
      - name: Firefly Post Apply
        if: steps.set-params.outputs.apply == 'true'
        run: ./fireflyci post-apply -f apply_log.jsonl --workspace KaiMonkey
        working-directory: ./terraform/aws